axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=10),
legend.text =  element_text(size=11),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
OnePlot
MultiPlot <- cr +  geom_point() + geom_smooth() + facet_grid(Diet~.) + xlab("Weight in Grams") + ylab("Time in Days") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=10),
legend.text =  element_text(size=11),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
MultiPlot
MultiPlot
MultiPlot <- cr +  geom_point() + geom_smooth() + facet_grid(Diet~.) + xlab("Weight in Grams") + ylab("Time in Days") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
#  panel.grid.major.x = element_line(color="Black"),
#   panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=10),
legend.text =  element_text(size=11),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
MultiPlot
MultiPlot <- cr +  geom_point() + geom_smooth() + facet_grid(Diet~.) + xlab("Weight in Grams") + ylab("Time in Days") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
#  panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=10),
legend.text =  element_text(size=11),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
MultiPlot
MultiPlot <- cr +  geom_point() + geom_smooth() + facet_grid(Diet~.) + xlab("Weight in Grams") + ylab("Time in Days") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
#  panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=10),
legend.text =  element_text(size=11),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
MultiPlot
MultiPlot <- cr +  geom_point() + geom_smooth() + facet_grid(Diet~.) + xlab("Weight in Grams") + ylab("Time in Days") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
# panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=10),
legend.text =  element_text(size=11),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
MultiPlot <- cr +  geom_point() + geom_smooth() + facet_grid(Diet~.) + xlab("Weight in Grams") + ylab("Time in Days") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=10),
legend.text =  element_text(size=11),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
MultiPlot
MultiPlot <- cr +  geom_point() + geom_smooth() + facet_grid(Diet~.) + xlab("Weight in Grams") + ylab("Time in Days") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
# panel.grid.major.x = element_line(color="Black"),
# panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=10),
legend.text =  element_text(size=11),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
MultiPlot
OnePlot
OnePlot <- ch + geom_jitter() + geom_smooth() + xlab("Time in Days") + ylab("Weight in Grams") +
ggtitle("Chicks Weight Increase per Diet") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=20),
legend.text =  element_text(size=15),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
OnePlot
#Increase in weight from all diets in one plot
ch <- ggplot(data=Chick, aes(x=Time, y=weight, color=12:15))
OnePlot <- ch + geom_jitter() + geom_smooth() + xlab("Time in Days") + ylab("Weight in Grams") +
ggtitle("Chicks Weight Increase per Diet") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=20),
legend.text =  element_text(size=15),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
OnePlot
#Increase in weight from all diets in one plot
ch <- ggplot(data=Chick, aes(x=Time, y=weight, color=12:16))
OnePlot <- ch + geom_jitter() + geom_smooth() + xlab("Time in Days") + ylab("Weight in Grams") +
ggtitle("Chicks Weight Increase per Diet") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=20),
legend.text =  element_text(size=15),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
OnePlot
#Increase in weight from all diets in one plot
ch <- ggplot(data=Chick, aes(x=Time, y=weight, color=1)
OnePlot <- ch + geom_jitter() + geom_smooth() + xlab("Time in Days") + ylab("Weight in Grams") +
ggtitle("Chicks Weight Increase per Diet") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=20),
legend.text =  element_text(size=15),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
OnePlot
#Increase in weight from all diets in one plot
ch <- ggplot(data=Chick, aes(x=Time, y=weight, color=Diet)
OnePlot <- ch + geom_jitter() + geom_smooth() + xlab("Time in Days") + ylab("Weight in Grams") +
ggtitle("Chicks Weight Increase per Diet") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=20),
legend.text =  element_text(size=15),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
OnePlot
#Increase in weight from all diets in one plot
ch <- ggplot(data=Chick, aes(x=Time, y=weight, color=Diet))
OnePlot <- ch + geom_jitter() + geom_smooth() + xlab("Time in Days") + ylab("Weight in Grams") +
ggtitle("Chicks Weight Increase per Diet") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=20),
legend.text =  element_text(size=15),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
OnePlot
MultiPlot <- cr +  geom_point() + geom_smooth() + facet_grid(Diet~.) + xlab("Weight in Grams") + ylab("Time in Days") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
# panel.grid.major.x = element_line(color="Black"),
# panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=10),
legend.text =  element_text(size=11),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
MultiPlot
head(Chick)
MultiPlot <- cr +  geom_point() + geom_smooth() + facet_grid(Diet~.) + xlab("Weight in Grams") + ylab("Time in Days") +
ggtitle("Chicks Weight Increase Per Diet") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
# panel.grid.major.x = element_line(color="Black"),
# panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=10),
legend.text =  element_text(size=11),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
MultiPlot
OnePlot <- ch + geom_jitter() + geom_smooth() + xlab("Time in Days") + ylab("Weight in Grams") +
ggtitle("Chicks Weight Increase For All Diet") +
theme(axis.title.x = element_text(colour="DarkRed", size=15),
axis.title.y = element_text(colour="DarkRed", size=15),
axis.text.y = element_text(size=10),
axis.text.x = element_text(size=10),
panel.grid.major.x = element_line(color="Black"),
panel.grid.major.y = element_line(color="Black"),
legend.title = element_text(size=20),
legend.text =  element_text(size=15),
#  legend.position = c(1,1),
legend.justification = c(1,0.5),
plot.title = element_text(colour = "DarkRed",
size=20, family = "Courier"))
OnePlot
#List of Plots
PlotList <- list(OnePlot, MultiPlot)
PlotList[[1]]
PlotList[[2]]
#Waarden andere kleuren geven door colour waarde te veranderen:
qplot(data=stats, x=Internet.users, y=Birth.rate, size=I(3), color=Income.Group)
DNA <- datasets::DNase
DNA
library(ggplot2)
str(DNA)
head(DNA)
Dplot <- ggplot(data=DNA, aes(x=conc, y=density))
Dplot <- ggplot(data=DNA, aes(x=conc, y=density, color=Run))
Dplot + geom_point()
Dplot + geom_point() + geom_smooth
Dplot + geom_point() + geom_smooth()
Dplot + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
Dplot + geom_density(aes(fill=NA, alpha(I=0.55)))
Dplot + geom_density(aes(fill=NA, alpha=I(0.55)))
Yplot <- ggplot(data=DNA, aes(x=conc, color=Run))
Dplot + geom_density(aes(fill=NA, alpha=I(0.55)))
Dplot + geom_density(aes(y=density,fill=NA, alpha=I(0.55)))
Dplot + geom_density(aes(y=density, fill=NA, alpha=I(0.55)))
Dplot + geom_density(aes(fill=density, alpha=I(0.55)))
Dplot + geom_density(aes(fill=density))
#Histograms
h <- ggplot(data=Indo, aes(x=time, color=Subject))
h + geom_density()
Dplot + geom_density()
ggplot(data=Indo, aes(x=time, color=Subject))
h + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Black")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
#Histograms
h <- ggplot(data=Indo, aes(x=time, color=Subject))
h + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Black")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
l <- ggplot(data=Indo, aes(x=time, y=conc,color=Subject))
l + geom_smooth(fill=NA) + geom_point()
l + geom_smooth(fill=NA) + geom_point() + facet_grid(Subject~.) +
geom_hline(aes(yintercept=TresholdSubject1),colour="Red") +
geom_hline(aes(yintercept=TresholdSubject2),colour="Yellow") +
geom_hline(aes(yintercept=TresholdSubject3),colour="Green") +
geom_hline(aes(yintercept=TresholdSubject4),colour="Black") +
geom_hline(aes(yintercept=TresholdSubject5),colour="Blue") +
geom_hline(aes(yintercept=TresholdSubject6),colour="Purple")
l + geom_smooth(fill=NA) + geom_point()
l + geom_smooth(fill=NA) + geom_point() + facet_grid(Subject~.) +
geom_hline(aes(yintercept=TresholdSubject1),colour="Red") +
geom_hline(aes(yintercept=TresholdSubject2),colour="Yellow") +
geom_hline(aes(yintercept=TresholdSubject3),colour="Green") +
geom_hline(aes(yintercept=TresholdSubject4),colour="Black") +
geom_hline(aes(yintercept=TresholdSubject5),colour="Blue") +
geom_hline(aes(yintercept=TresholdSubject6),colour="Purple")
#Histograms
h <- ggplot(data=Indo, aes(x=time, color=Subject))
h + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Black")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
#Histograms
h <- ggplot(data=Indo, aes(x=time, y=conc, color=Subject))
h + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Black")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
#Histograms
h <- ggplot(data=Indo, aes(x=time, color=Subject))
h + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Black")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
#Histograms
h <- ggplot(data=Indo, aes(x=time, color=Subject))
#Histograms
h <- ggplot(data=Indo, aes(x=time, color=Subject))
h + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Black")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
l <- ggplot(data=Indo, aes(x=time, y=conc,color=Subject))
l + geom_smooth(fill=NA) + geom_point()
l + geom_smooth(fill=NA) + geom_point() + facet_grid(Subject~.) +
geom_hline(aes(yintercept=TresholdSubject1),colour="Red") +
geom_hline(aes(yintercept=TresholdSubject2),colour="Yellow") +
geom_hline(aes(yintercept=TresholdSubject3),colour="Green") +
geom_hline(aes(yintercept=TresholdSubject4),colour="Black") +
geom_hline(aes(yintercept=TresholdSubject5),colour="Blue") +
geom_hline(aes(yintercept=TresholdSubject6),colour="Purple")
head(Indo,n=23)
max(Indo[Indo$Subject,"conc"])
Indo$Subject <- factor(Indo$Subject)
str(Indo)
TresholdSubject1 <- (max(Indo[Indo$Subject=="1","conc"])) / 2
TresholdSubject2 <- (max(Indo[Indo$Subject=="2","conc"])) / 2
TresholdSubject3 <- (max(Indo[Indo$Subject=="3","conc"])) / 2
TresholdSubject4 <- (max(Indo[Indo$Subject=="4","conc"])) / 2
TresholdSubject5 <- (max(Indo[Indo$Subject=="5","conc"])) / 2
TresholdSubject6 <- (max(Indo[Indo$Subject=="6","conc"])) / 2
list(TresholdSubject1, TresholdSubject2, TresholdSubject3, TresholdSubject4, TresholdSubject5, TresholdSubject6)
apply(Tindo$Subject, 1, max)
Mindo <- as.matrix(Indo)
Mindo
apply(Mindo$Subject=="1", 1, max)
which.max(Indo$conc)
Indo[Indo,"Subject"]
Indo[Indo$Subject,]
Indo$Subject <- as.numeric(as.character(Indo$Subject))
head(Indo)
Subject1 <- Indo[Indo$Subject=="1",]
Subject2 <- Indo[Indo$Subject=="2",]
Subject3 <- Indo[Indo$Subject=="3",]
Subject4 <- Indo[Indo$Subject=="4",]
Subject5 <- Indo[Indo$Subject=="5",]
Subject6 <- Indo[Indo$Subject=="6",]
Subjects <- list(Subject1=Subject1, Subject2=Subject2, Subject3=Subject3, Subject4=Subject4,Subject5=Subject5,Subject6=Subject6)
Subjects
Tsub <- t(Subjects)
Tsub
MaxPerSubject1 <- apply(Subject1[3], 2, max)
MaxPerSubject2 <- apply(Subject2[3], 2, max)
MaxPerSubject3 <- apply(Subject3[3], 2, max)
MaxPerSubject4 <- apply(Subject4[3], 2, max)
MaxPerSubject5 <- apply(Subject5[3], 2, max)
MaxPerSubject6 <- apply(Subject6[3], 2, max)
MaxPerSubject1
MaxPerSubject2
MaxPerSubject3
MaxPerSubject4
MaxPerSubject5
MaxPerSubject6
MaxSubjects <- list(MaxPerSubject1=MaxPerSubject1, MaxPerSubject2=MaxPerSubject2, MaxPerSubject3=MaxPerSubject3, MaxPerSubject4=MaxPerSubject4,
MaxPerSubject5=MaxPerSubject5,MaxPerSubject6=MaxPerSubject6)
MaxSubjects
T2sub <- rbind(Subjects, MaxPerSubject1)
T2sub
Subjects2 <- lapply(seclist, rbind, MaxSubjects)
#seclist <- lapply(Subjects, t)
#seclist <- lapply(Subjects, t)
#seclist
#seclist <- lapply(Subjects, t)
#seclist
#seclist <- rbind(seclist, NewRow=1)
#seclist <- lapply(Subjects, t)
#seclist
#seclist <- rbind(seclist, NewRow=1)
#seclist
#seclist <- lapply(Subjects, t)
#seclist
#seclist <- rbind(seclist, NewRow=1)
#seclist
#thirdlist <- rbind(Subjects, NewRow=1)
#seclist <- lapply(Subjects, t)
#seclist
#seclist <- rbind(seclist, NewRow=1)
#seclist
#thirdlist <- rbind(Subjects, NewRow=1)
#thirdlist
#seclist <- lapply(Subjects, t)
#seclist
#seclist <- rbind(seclist, NewRow=1)
#seclist
#thirdlist <- rbind(Subjects, NewRow=1)
#thirdlist
#as.matrix(thirdlist)
#seclist <- lapply(Subjects, t)
#seclist
#seclist <- rbind(seclist, NewRow=1)
#seclist
#thirdlist <- rbind(Subjects, NewRow=1)
#thirdlist
#as.matrix(thirdlist)
#thirdlist
s <- ggplot(data=movies, aes(x=BudgetMillions, colour=Genre))
s + geom_histogram(binwidth=20)
#Add colour by Setting "fill="
s + geom_histogram(binwidth = 10, fill="Green")
#Add colour by Mapping "aes(fill=)"
s + geom_histogram(binwidth = 15, aes(fill=Genre))
#If you want set colour to the lines use colour outside of aes();
s + geom_histogram(binwidth=20, aes(fill=Genre), color="Black")
#See the difference
s + geom_histogram(binwidth=20)
#Sometimes you may need density charts
s + geom_density()
s + geom_density(aes(fill=Genre))
s + geom_density(aes(fill=Genre), position="stack")
s + geom_density(aes(fill=Genre), position="stack", colour="Black")
#Density Charts
h <- ggplot(data=Indo, aes(x=time, color=Subject))
h + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Black")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
l <- ggplot(data=Indo, aes(x=time, y=conc,color=Subject))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Blue")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
s + geom_density(aes(fill=Genre), position="stack", colour="Black")
rm(h)
#Density Charts
h <- ggplot(data=Indo, aes(x=time, color=Subject))
h + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Blue")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
u
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
head(Indo)
#Density Charts
h <- ggplot(data=Indo, aes(x=time, color=Subject))
h + geom_density()
h + geom_point
h + geom_point()
#Density Charts
h <- ggplot(data=Indo, aes(x=time, y=conc, color=Subject))
h + geom_point()
h + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Blue")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
#Density Charts
h <- ggplot(data=Indo, aes(x=time, color=Subject))
h + geom_point()
h + geom_density()
h + geom_density(aes(fill=Subject), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55), color="Blue")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack")
h + geom_density(aes(fill=Subject), alpha=I(0.55), position = "Stack", color="Black")
h + geom_density(aes(fill=Subject,y=conc), alpha=I(0.55))
h + geom_density(aes(fill=Subject), alpha=I(0.55))
Titanic
swiss
head(swiss)
str(swiss)
volcano
head(volcano)
str(volcano)
summary(volcano)
str(volcano)
ability.cov
Harman23.cor
str(Harman23.cor)
HairEyeColor
